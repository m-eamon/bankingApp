/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bankingapp;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author eamon
 */
public class Menu extends javax.swing.JFrame {
    Connection con = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    
    /**
     * Creates new form Menu
     */
    public Menu() {
        initComponents();
        fetch();
    }
    
    public void fetch(){
        try{
            // could this be done in DBMethods?
            Connection con = DBMethods.getConnection();
            pst = con.prepareStatement("Select accountID, firstname, lastname, accountNumber, sortCode, balance from account");
            rs = pst.executeQuery();           
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Error: Account info could not be fetched! - " + ex);
        }
        
        tblaccountdata.setModel(DbUtils.resultSetToTableModel(rs));
    }

    
    public void Update_table(){
        try{
            Connection con = DBMethods.getConnection();
            // don't select everything from account
            pst = con.prepareStatement("Select accountID, firstname, lastname, accountNumber, sortCode, balance from account");
            rs = pst.executeQuery();
            tblaccountdata.setModel(DbUtils.resultSetToTableModel(rs));
            
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Error: Account info could not be fetched! - " + ex);
        }        
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblaccountdata = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        itemExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        itemCreate = new javax.swing.JMenuItem();
        itemDelete = new javax.swing.JMenuItem();
        itemEdit = new javax.swing.JMenuItem();
        itemTransfer = new javax.swing.JMenuItem();
        itemWithdraw = new javax.swing.JMenuItem();
        itemDeposit = new javax.swing.JMenuItem();
        itemView = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Banking App");

        tblaccountdata.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblaccountdata);

        jMenu1.setText("File");

        itemExit.setText("Exit");
        itemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemExitActionPerformed(evt);
            }
        });
        jMenu1.add(itemExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        itemCreate.setText("Create Account");
        itemCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemCreateActionPerformed(evt);
            }
        });
        jMenu2.add(itemCreate);

        itemDelete.setText("Delete Account");
        itemDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemDeleteActionPerformed(evt);
            }
        });
        jMenu2.add(itemDelete);

        itemEdit.setText("Edit Account");
        itemEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemEditActionPerformed(evt);
            }
        });
        jMenu2.add(itemEdit);

        itemTransfer.setText("Transfer Funds");
        itemTransfer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemTransferActionPerformed(evt);
            }
        });
        jMenu2.add(itemTransfer);

        itemWithdraw.setText("Withdraw Funds");
        itemWithdraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemWithdrawActionPerformed(evt);
            }
        });
        jMenu2.add(itemWithdraw);

        itemDeposit.setText("Deposit Funds");
        itemDeposit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemDepositActionPerformed(evt);
            }
        });
        jMenu2.add(itemDeposit);

        itemView.setText("View Transactions");
        itemView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemViewActionPerformed(evt);
            }
        });
        jMenu2.add(itemView);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 453, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void itemCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemCreateActionPerformed
        // close the screen
        this.dispose();
        new CreateAccount().setVisible(true);
    }//GEN-LAST:event_itemCreateActionPerformed

    private void itemDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemDeleteActionPerformed
        int row;
        row = tblaccountdata.getSelectedRow();
        if (row >= 0) {
            String value = tblaccountdata.getModel().getValueAt(row,0).toString();
            String str = value.replace("[^0-9]+"," ");
            int id = Integer.parseInt(str);
            //JOptionPane.showMessageDialog(null,id);
            try {
                DBMethods.deleteAccount(id);
                JOptionPane.showMessageDialog(null,"Account deleted");
            }
            catch (Exception ex)
            {
                JOptionPane.showMessageDialog(null, "Error: Acccount not deleted! - " + ex);
            }
            tblaccountdata.addNotify();
            tblaccountdata.validate();
            Update_table();
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select an account to delete");
                    //new Login().setVisible(true);   
        }
    }//GEN-LAST:event_itemDeleteActionPerformed

    private void itemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemExitActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_itemExitActionPerformed

    private void itemEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemEditActionPerformed
        // TODO add your handling code here:
         // close the screen
        int row;
        row = tblaccountdata.getSelectedRow();
        if (row >= 0) {
            String value = tblaccountdata.getModel().getValueAt(row,0).toString();
            String str = value.replace("[^0-9]+"," ");
            int id = Integer.parseInt(str);
            
            Account ac = DBMethods.fetch(id);
            
            //JOptionPane.showMessageDialog(null, "Account: " + ac.getAddress());
            this.dispose();
            new EditAccount(ac).setVisible(true);
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select an account to edit");
                    //new Login().setVisible(true);   
        }
        
    }//GEN-LAST:event_itemEditActionPerformed

    private void itemDepositActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemDepositActionPerformed
        // TODO add your handling code here:
        int row;
        row = tblaccountdata.getSelectedRow();
        if (row >= 0) {
            String value = tblaccountdata.getModel().getValueAt(row,0).toString();
            String str = value.replace("[^0-9]+"," ");
            int id = Integer.parseInt(str);
            
            Account ac = DBMethods.fetch(id);
            
            //JOptionPane.showMessageDialog(null, "Account: " + ac.getAddress());
            this.dispose();
            new Deposit(ac).setVisible(true);
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select an account to perform the lodgement");
                    //new Login().setVisible(true);   
        }
    }//GEN-LAST:event_itemDepositActionPerformed

    private void itemWithdrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemWithdrawActionPerformed
        int row;
        row = tblaccountdata.getSelectedRow();
        if (row >= 0) {
            String value = tblaccountdata.getModel().getValueAt(row,0).toString();
            String str = value.replace("[^0-9]+"," ");
            int id = Integer.parseInt(str);
            
            Account ac = DBMethods.fetch(id);
            
            //JOptionPane.showMessageDialog(null, "Account: " + ac.getAddress());
            this.dispose();
            new Withdrawl(ac).setVisible(true);
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select an account to perform the withdrawl");
                    //new Login().setVisible(true);   
        }
    }//GEN-LAST:event_itemWithdrawActionPerformed

    private void itemTransferActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemTransferActionPerformed
        int row;
        row = tblaccountdata.getSelectedRow();
        if (row >= 0) {
            String value = tblaccountdata.getModel().getValueAt(row,0).toString();
            String str = value.replace("[^0-9]+"," ");
            int id = Integer.parseInt(str);
            
            Account ac = DBMethods.fetch(id);
            
            //JOptionPane.showMessageDialog(null, "Account: " + ac.getAddress());
            this.dispose();
            new TransferFunds(ac).setVisible(true);
        }
        else
        {
            JOptionPane.showMessageDialog(null,"Please select an account to perform the transfer");
                    //new Login().setVisible(true);   
        }
    }//GEN-LAST:event_itemTransferActionPerformed

    private void itemViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemViewActionPerformed
        // TODO add your handling code here:
        this.dispose();
        new Transactions().setVisible(true);
    }//GEN-LAST:event_itemViewActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem itemCreate;
    private javax.swing.JMenuItem itemDelete;
    private javax.swing.JMenuItem itemDeposit;
    private javax.swing.JMenuItem itemEdit;
    private javax.swing.JMenuItem itemExit;
    private javax.swing.JMenuItem itemTransfer;
    private javax.swing.JMenuItem itemView;
    private javax.swing.JMenuItem itemWithdraw;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblaccountdata;
    // End of variables declaration//GEN-END:variables
}
